// ignore_for_file: non_constant_identifier_namesimport 'package:flutter/material.dart';import 'package:provider/provider.dart';import 'package:untitled1/api/aip.dart';import 'package:untitled1/celement/elements.dart';import 'package:untitled1/notifire/Cartnotififire.dart';import 'package:untitled1/notifire/supplierNotifire.dart';import '../notifire/categoryNotifire.dart';class Cart extends StatefulWidget {  const Cart({Key? key}) : super(key: key);  @override  State<Cart> createState() => _CartState();}class _CartState extends State<Cart> {  @override  Widget build(BuildContext context) {    Cartnotifire cart = Provider.of<Cartnotifire>(context);    SupplierNotifire supp =Provider.of<SupplierNotifire>(context);    return Scaffold(         body:Column(           children: [             Expanded(               child: ListView.builder(                 itemCount: cart.Cartlist.length,                 itemBuilder: (context, index) {                 return Card(                     child: Column(                       children: [                         Row(                           children: [                             Image.network('${cart.Cartlist[index].Product!.image}',width: 120,height: 120,fit:BoxFit.fill,),                             Text('${cart.Cartlist[index].Product!.nameProduct}'),                             IconButton(onPressed: (){                               cart.sum(index);                             }, icon: Icon(Icons.add),color: element.main,),                             Text('${cart.Cartlist[index].amout}'),                             IconButton(onPressed: (){                               cart.dedet(index);                             }, icon: Icon(Icons.minimize),color:element.main,),                             IconButton(onPressed: (){                               cart.remove(index);                             }, icon: Icon(Icons.delete),color: Colors.red,),                           ],                         ),                       ],                     ));               },),             ),             Container(               height: 130,               width: 400,               decoration: BoxDecoration(               ),               child: comboboxcontainer(context, supp ,cart),             ),             Container(               margin: const EdgeInsets.only(right: 15, left: 15),               width: 390,               child: ElevatedButton(                 style: ElevatedButton.styleFrom(                     primary: element.main,                     shape: const StadiumBorder(),                     padding: const EdgeInsets.symmetric(vertical: 16)),                 onPressed: () {                   //Carts.cecks();                   Navigator.push(context,                       MaterialPageRoute(builder: (context) => const Cart()));                 },                 child: const Text(                   "ສັ່ງຊື້",                   style: TextStyle(fontSize: 20),                 ),               ),             ),             SizedBox(height: 20),           ],         ),    ) ;}}comboboxcontainer(context,SupplierNotifire supp,Cartnotifire cart) {  return Row(      children: [        Container(          width: 200,           height: 150,           // margin: const EdgeInsets.only(bottom: 67),            decoration: BoxDecoration(                borderRadius: BorderRadius.circular(18)),            child: Column(              children: [                dropdownButton(supp),              ],            )),        Padding(         padding: EdgeInsets.only(bottom: 30,left: 65),          child: Text('ຈຳນວນ'+'${cart.amoultoal}'),        )      ],    );}DropdownButton<String> dropdownButton(SupplierNotifire supp,) {  int i = 0;  return DropdownButton(      icon: const Icon(        Icons.keyboard_arrow_down,        size: 50,      ),      borderRadius: BorderRadius.circular(50),      value: supp.SuppType,      isExpanded: true,      underline: Container(),      hint: const Padding(        padding: EdgeInsets.only(left: 50),        child: Text("ເລືອກຜູ້ສະຫນອງ"),      ),      // icon: const Icon(Icons.keyboard_arrow_down),      items: supp.Supliername          .map((e) => DropdownMenuItem(          value: e,          child: Padding(            padding: const EdgeInsets.only(left: 20.0),            child: Text(e),          )))          .toList(),      onChanged: (String? v) {        supp.SelectType(v);      });}